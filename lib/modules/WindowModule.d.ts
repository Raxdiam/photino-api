import { PhotinoModule } from '../PhotinoModule';
export declare type HitTest = 'drag' | 'n' | 's' | 'e' | 'w' | 'ne' | 'nw' | 'se' | 'sw';
export declare class WindowModule extends PhotinoModule {
    readonly name: string;
    getTitle(): Promise<string>;
    getMaximized(): Promise<boolean>;
    getMinimized(): Promise<boolean>;
    getDevToolsEnabled(): Promise<boolean>;
    getContextMenuEnabled(): Promise<boolean>;
    getTopMost(): Promise<boolean>;
    getChromeless(): Promise<boolean>;
    getFullScreen(): Promise<boolean>;
    getResizable(): Promise<boolean>;
    getWidth(): Promise<number>;
    getHeight(): Promise<number>;
    getTop(): Promise<number>;
    getLeft(): Promise<number>;
    setTitle(title: string): Promise<void>;
    setMaximized(maximized: boolean): Promise<void>;
    setMinimized(minimized: boolean): Promise<void>;
    setDevToolsEnabled(enabled: boolean): Promise<void>;
    setContextMenuEnabled(enabled: boolean): Promise<void>;
    setTopMost(topMost: boolean): Promise<void>;
    setChromeless(chromeless: boolean): Promise<void>;
    setFullScreen(fullScreen: boolean): Promise<void>;
    setResizable(resizable: boolean): Promise<void>;
    setWidth(width: number): Promise<void>;
    setHeight(height: number): Promise<void>;
    setTop(top: number): Promise<void>;
    setLeft(left: number): Promise<void>;
    close(): Promise<void>;
    load(path: string): Promise<void>;
    loadRawString(content: string): Promise<void>;
    center(): Promise<void>;
    hitTest(hitTest: HitTest | string): void;
    drag(): void;
    resizeTopLeft(): void;
    resizeTop(): void;
    resizeTopRight(): void;
    resizeRight(): void;
    resizeBottomRight(): void;
    resizeBottom(): void;
    resizeBottomLeft(): void;
    resizeLeft(): void;
}
